'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxstyleUtils = require('jsxstyle-utils');
var React = require('react');

/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics =
  Object.setPrototypeOf ||
  ({ __proto__: [] } instanceof Array &&
    function(d, b) {
      d.__proto__ = b;
    }) ||
  function(d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
  };

function __extends(d, b) {
  extendStatics(d, b);
  function __() {
    this.constructor = d;
  }
  d.prototype =
    b === null ? Object.create(b) : ((__.prototype = b.prototype), new __());
}

var __assign =
  Object.assign ||
  function __assign(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
    }
    return t;
  };

var cache = jsxstyleUtils.getStyleCache();
function factory(displayName, defaultProps) {
  var tagName = 'div';
  return (
    (_a = /** @class */ (function(_super) {
      __extends(JsxstyleComponent, _super);
      function JsxstyleComponent(props) {
        var _this = _super.call(this, props) || this;
        _this.component = props.component || tagName;
        _this.className = cache.getClassName(props, props.className);
        return _this;
      }
      JsxstyleComponent.prototype.componentWillReceiveProps = function(props) {
        this.component = props.component || tagName;
        this.className = cache.getClassName(props, props.className);
      };
      JsxstyleComponent.prototype.render = function() {
        var _a = this.props,
          props = _a.props,
          style = _a.style,
          children = _a.children;
        return React.createElement(
          this.component,
          __assign({}, props, { className: this.className, style: style }),
          children
        );
      };
      return JsxstyleComponent;
    })(React.Component)),
    (_a.defaultProps = defaultProps),
    (_a.displayName = displayName),
    _a
  );
  var _a;
}
var Box = factory('Box');
var Block = factory('Block', jsxstyleUtils.componentStyles.Block);
var Inline = factory('Inline', jsxstyleUtils.componentStyles.Inline);
var InlineBlock = factory(
  'InlineBlock',
  jsxstyleUtils.componentStyles.InlineBlock
);
var Row = factory('Row', jsxstyleUtils.componentStyles.Row);
var Col = factory('Col', jsxstyleUtils.componentStyles.Col);
var Grid = factory('Grid', jsxstyleUtils.componentStyles.Grid);
function depFactory(displayName, defaultProps) {
  var hasWarned = false;
  // tslint:disable-next-line max-classes-per-file
  return (
    (_a = /** @class */ (function(_super) {
      __extends(DeprecatedJsxstyleComponent, _super);
      function DeprecatedJsxstyleComponent() {
        return (_super !== null && _super.apply(this, arguments)) || this;
      }
      DeprecatedJsxstyleComponent.prototype.componentWillMount = function() {
        if (process.env.NODE_ENV !== 'production') {
          if (!hasWarned) {
            hasWarned = true;
            // tslint:disable-next-line no-console
            console.error(
              'jsxstyle\u2019s `%s` component is deprecated and will be removed in future versions of jsxstyle.',
              displayName
            );
          }
        }
      };
      DeprecatedJsxstyleComponent.prototype.render = function() {
        return React.createElement(Box, __assign({}, this.props));
      };
      return DeprecatedJsxstyleComponent;
    })(React.Component)),
    (_a.displayName = displayName),
    (_a.defaultProps = defaultProps),
    _a
  );
  var _a;
}
// <Box component="table" />
var Table = depFactory('Table', { display: 'table' });
var TableRow = depFactory('TableRow', { display: 'table-row' });
var TableCell = depFactory('TableCell', { display: 'table-cell' });
// <Row display="inline-flex" />
var Flex = depFactory('Flex', { display: 'flex' });
var InlineFlex = depFactory('InlineFlex', { display: 'inline-flex' });

exports.cache = cache;
exports.Box = Box;
exports.Block = Block;
exports.Inline = Inline;
exports.InlineBlock = InlineBlock;
exports.Row = Row;
exports.Col = Col;
exports.Grid = Grid;
exports.Table = Table;
exports.TableRow = TableRow;
exports.TableCell = TableCell;
exports.Flex = Flex;
exports.InlineFlex = InlineFlex;
