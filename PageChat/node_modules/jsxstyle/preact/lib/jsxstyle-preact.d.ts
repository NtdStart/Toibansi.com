/// <reference types="preact" />
import { CSSProperties, Dict } from 'jsxstyle-utils';
import * as preact from 'preact';
export { CSSProperties };
export declare const cache: {
  reset(): void;
  injectOptions(
    options?:
      | {
          onInsertRule?:
            | ((rule: string, props?: {} | undefined) => boolean | void)
            | undefined;
          pretty?: boolean | undefined;
          getClassName?:
            | ((key: string, props?: {} | undefined) => string)
            | undefined;
        }
      | undefined
  ): void;
  getClassName(
    props: Dict<any>,
    classNameProp?: string | undefined
  ): string | null;
};
export interface StyleProps {
  class?: string;
  style?: any;
}
export declare type AnyComponent<Props extends StyleProps> =
  | keyof JSX.IntrinsicElements
  | preact.ComponentConstructor<Props, any>
  | ((props?: Props, ...args: any[]) => preact.VNode | null);
export declare type JsxstyleProps<ComponentProps> = {
  children?: preact.VNode[];
  component?: AnyComponent<ComponentProps>;
  mediaQueries?: Dict<string>;
  props?: ComponentProps;
} & StyleProps &
  CSSProperties;
export declare const Box: preact.ComponentConstructor<
  JsxstyleProps<Dict<any>>,
  {}
>;
export declare const Block: preact.ComponentConstructor<
  JsxstyleProps<Dict<any>>,
  {}
>;
export declare const Inline: preact.ComponentConstructor<
  JsxstyleProps<Dict<any>>,
  {}
>;
export declare const InlineBlock: preact.ComponentConstructor<
  JsxstyleProps<Dict<any>>,
  {}
>;
export declare const Row: preact.ComponentConstructor<
  JsxstyleProps<Dict<any>>,
  {}
>;
export declare const Col: preact.ComponentConstructor<
  JsxstyleProps<Dict<any>>,
  {}
>;
export declare const Grid: preact.ComponentConstructor<
  JsxstyleProps<Dict<any>>,
  {}
>;
