{"version":3,"sources":["../../src/auth/index.js"],"names":["config","require","passport","logger","LocalStrategy","Strategy","FacebookStrategy","TwitterStrategy","User","init","serializeUser","user","done","id","deserializeUser","findById","err","use","username","password","findOne","RegExp","socialId","message","validatePassword","isMatch","verifySocialAccount","tokenA","tokenB","data","findOrCreate","facebook","twitter","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,SAAWC,QAAQ,WAAR,CAAf;AACA,IAAIC,WAAYD,QAAQ,UAAR,CAAhB;AACA,IAAIE,SAAWF,QAAQ,WAAR,CAAf;;AAEA,IAAIG,gBAAkBH,QAAQ,gBAAR,EAA0BI,QAAhD;AACA,IAAIC,mBAAqBL,QAAQ,mBAAR,EAA6BI,QAAtD;AACA,IAAIE,kBAAoBN,QAAQ,kBAAR,EAA4BI,QAApD;;AAEA,IAAIG,OAAOP,QAAQ,gBAAR,CAAX;;AAEA;;;;;AAKA,IAAIQ,OAAO,SAAPA,IAAO,GAAU;;AAEpB;AACAP,UAASQ,aAAT,CAAuB,UAASC,IAAT,EAAeC,IAAf,EAAqB;AAC3CA,OAAK,IAAL,EAAWD,KAAKE,EAAhB;AACA,EAFD;;AAIAX,UAASY,eAAT,CAAyB,UAASD,EAAT,EAAaD,IAAb,EAAmB;AAC3CJ,OAAKO,QAAL,CAAcF,EAAd,EAAkB,UAAUG,GAAV,EAAeL,IAAf,EAAqB;AACtCC,QAAKI,GAAL,EAAUL,IAAV;AACA,GAFD;AAGA,EAJD;;AAMA;AACAT,UAASe,GAAT,CAAa,IAAIb,aAAJ,CACX,UAASc,QAAT,EAAmBC,QAAnB,EAA6BP,IAA7B,EAAmC;AACjCJ,OAAKY,OAAL,CAAa,EAAEF,UAAU,IAAIG,MAAJ,CAAWH,QAAX,EAAqB,GAArB,CAAZ,EAAuCI,UAAU,IAAjD,EAAb,EAAsE,UAASN,GAAT,EAAcL,IAAd,EAAoB;AACxF,OAAIK,GAAJ,EAAS;AAAE,WAAOJ,KAAKI,GAAL,CAAP;AAAmB;;AAE9B,OAAI,CAACL,IAAL,EAAW;AACT,WAAOC,KAAK,IAAL,EAAW,KAAX,EAAkB,EAAEW,SAAS,iCAAX,EAAlB,CAAP;AACD;;AAEDZ,QAAKa,gBAAL,CAAsBL,QAAtB,EAAgC,UAASH,GAAT,EAAcS,OAAd,EAAuB;AACpD,QAAIT,GAAJ,EAAS;AAAE,YAAOJ,KAAKI,GAAL,CAAP;AAAmB;AAC9B,QAAI,CAACS,OAAL,EAAa;AACZ,YAAOb,KAAK,IAAL,EAAW,KAAX,EAAkB,EAAEW,SAAS,iCAAX,EAAlB,CAAP;AACA;AACD,WAAOX,KAAK,IAAL,EAAWD,IAAX,CAAP;AACF,IAND;AAQD,GAfD;AAgBD,EAlBU,CAAb;;AAqBA;AACA;AACA,KAAIe,sBAAsB,SAAtBA,mBAAsB,CAASC,MAAT,EAAiBC,MAAjB,EAAyBC,IAAzB,EAA+BjB,IAA/B,EAAqC;AAC9DJ,OAAKsB,YAAL,CAAkBD,IAAlB,EAAwB,UAAUb,GAAV,EAAeL,IAAf,EAAqB;AACvC,OAAIK,GAAJ,EAAS;AAAE,WAAOJ,KAAKI,GAAL,CAAP;AAAmB;AACnC,UAAOJ,KAAKI,GAAL,EAAUL,IAAV,CAAP;AACA,GAHD;AAIA,EALD;;AAOA;AACAT,UAASe,GAAT,CAAa,IAAIX,gBAAJ,CAAqBN,OAAO+B,QAA5B,EAAsCL,mBAAtC,CAAb;AACAxB,UAASe,GAAT,CAAa,IAAIV,eAAJ,CAAoBP,OAAOgC,OAA3B,EAAoCN,mBAApC,CAAb;;AAEA,QAAOxB,QAAP;AACA,CAjDD;;AAmDA+B,OAAOC,OAAP,GAAiBzB,MAAjB","file":"index.js","sourcesContent":["'use strict';\r\n\r\nvar config \t\t= require('../config');\r\nvar passport \t= require('passport');\r\nvar logger \t\t= require('../logger');\r\n\r\nvar LocalStrategy \t\t= require('passport-local').Strategy;\r\nvar FacebookStrategy  \t= require('passport-facebook').Strategy;\r\nvar TwitterStrategy  \t= require('passport-twitter').Strategy;\r\n\r\nvar User = require('../models/user');\r\n\r\n/**\r\n * Encapsulates all code for authentication \r\n * Either by using username and password, or by using social accounts\r\n *\r\n */\r\nvar init = function(){\r\n\r\n\t// Serialize and Deserialize user instances to and from the session.\r\n\tpassport.serializeUser(function(user, done) {\r\n\t\tdone(null, user.id);\r\n\t});\r\n\r\n\tpassport.deserializeUser(function(id, done) {\r\n\t\tUser.findById(id, function (err, user) {\r\n\t\t\tdone(err, user);\r\n\t\t});\r\n\t});\r\n\r\n\t// Plug-in Local Strategy\r\n\tpassport.use(new LocalStrategy(\r\n\t  function(username, password, done) {\r\n\t    User.findOne({ username: new RegExp(username, 'i'), socialId: null }, function(err, user) {\r\n\t      if (err) { return done(err); }\r\n\r\n\t      if (!user) {\r\n\t        return done(null, false, { message: 'Incorrect username or password.' });\r\n\t      }\r\n\r\n\t      user.validatePassword(password, function(err, isMatch) {\r\n\t        \tif (err) { return done(err); }\r\n\t        \tif (!isMatch){\r\n\t        \t\treturn done(null, false, { message: 'Incorrect username or password.' });\r\n\t        \t}\r\n\t        \treturn done(null, user);\r\n\t      });\r\n\r\n\t    });\r\n\t  }\r\n\t));\r\n\r\n\t// In case of Facebook, tokenA is the access token, while tokenB is the refersh token.\r\n\t// In case of Twitter, tokenA is the token, whilet tokenB is the tokenSecret.\r\n\tvar verifySocialAccount = function(tokenA, tokenB, data, done) {\r\n\t\tUser.findOrCreate(data, function (err, user) {\r\n\t      \tif (err) { return done(err); }\r\n\t\t\treturn done(err, user); \r\n\t\t});\r\n\t};\r\n\r\n\t// Plug-in Facebook & Twitter Strategies\r\n\tpassport.use(new FacebookStrategy(config.facebook, verifySocialAccount));\r\n\tpassport.use(new TwitterStrategy(config.twitter, verifySocialAccount));\r\n\r\n\treturn passport;\r\n}\r\n\t\r\nmodule.exports = init();"]}